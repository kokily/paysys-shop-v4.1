type ChangePasswordResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  ChangePassword(password: String!): ChangePasswordResponse!
  Login(username: String!, password: String!): LoginResponse!
  Register(username: String!, password: String!): RegisterResponse!
  AddBill(title: String!, hall: String!, etc: String!): AddBillResponse!
  RemoveBill(id: ID!): RemoveBillResponse!
  RestoreBill(id: ID!): RestoreBillResponse!
  AddCart(item_id: ID!, count: Int!, price: Int!): AddCartResponse!
  RemoveCart: RemoveCartResponse!
  RemoveOne(item_id: ID!): RemoveOneResponse!
  AddClosed(year: String!, month: String!, users: [InputUser]!): AddClosedResponse!
  RemoveClosed(id: ID!): RemoveClosedResponse!
  AddItem(name: String!, divide: String!, native: String!, unit: String!, price: Int!): AddItemResponse!
  RemoveItem(id: ID!): RemoveItemResponse!
  UpdateItem(id: ID!, name: String, divide: String, native: String, unit: String, price: Int): UpdateItemResponse!
  AddReserve(bill_id: ID!, reserve: Int!): AddReserveResponse!
  RemoveReserve(id: ID!): RemoveReserveResponse!
  InitPassword(id: ID!): InitPasswordResponse!
  RemoveUser(id: ID!): RemoveUserResponse!
  SetAdmin(id: ID!): SetAdminResponse!
  SetEmployee(id: ID!): SetEmployeeResponse!
  AddWedding(husband_name: String!, bride_name: String!, wedding_at: String!, event_at: String!, company_husband: Int!, company_bride: Int!, rooftop_husband: Int!, rooftop_bride: Int!, owner_woman_husband: Int!, owner_woman_bride: Int!, owner_man_husband: Int!, owner_man_bride: Int!, select_husband: Int!, select_bride: Int!, frame_husband: Int!, frame_bride: Int!, dress_husband: Int!, dress_bride: Int!, hairpin_husband: Int!, hairpin_bride: Int!, wig_husband: Int!, wig_bride: Int!, video_husband: Int!, video_bride: Int!, etc_husband: Int!, etc_bride: Int!, rental_husband: Int!, rental_bride: Int!, sword_husband: Int!, sword_bride: Int!, glove_husband: Int!, glove_bride: Int!, bouquet_husband: Int!, bouquet_bride: Int!, ceremony_husband: Int!, ceremony_bride: Int!, play_husband: Int!, play_bride: Int!, anthem_husband: Int!, anthem_bride: Int!, moderator_husband: Int!, moderator_bride: Int!, officiate_husband: Int!, officiate_bride: Int!, hanbok_pre_husband: Int!, hanbok_pre_bride: Int!, hanbok_post_husband: Int!, hanbok_post_bride: Int!, meals: String!, meals_price: Int!, meals_num_husband: Int!, meals_num_bride: Int!, present: String!, present_price: Int!, present_num_husband: Int!, present_num_bride: Int!, reserve: String!, reserve_pay: Int!, cost_husband: Int!, cost_bride: Int!, meal_husband: Int!, meal_bride: Int!, present_husband: Int!, present_bride: Int!, reserve_husband: Int!, reserve_bride: Int!): AddWeddingResponse!
  RemoveWedding(id: ID!): RemoveWeddingResponse!
  UpdateWedding(id: ID!, husband_name: String!, bride_name: String!, wedding_at: String!, event_at: String!, company_husband: Int!, company_bride: Int!, rooftop_husband: Int!, rooftop_bride: Int!, owner_woman_husband: Int!, owner_woman_bride: Int!, owner_man_husband: Int!, owner_man_bride: Int!, select_husband: Int!, select_bride: Int!, frame_husband: Int!, frame_bride: Int!, dress_husband: Int!, dress_bride: Int!, hairpin_husband: Int!, hairpin_bride: Int!, wig_husband: Int!, wig_bride: Int!, video_husband: Int!, video_bride: Int!, etc_husband: Int!, etc_bride: Int!, rental_husband: Int!, rental_bride: Int!, sword_husband: Int!, sword_bride: Int!, glove_husband: Int!, glove_bride: Int!, bouquet_husband: Int!, bouquet_bride: Int!, ceremony_husband: Int!, ceremony_bride: Int!, play_husband: Int!, play_bride: Int!, anthem_husband: Int!, anthem_bride: Int!, moderator_husband: Int!, moderator_bride: Int!, officiate_husband: Int!, officiate_bride: Int!, hanbok_pre_husband: Int!, hanbok_pre_bride: Int!, hanbok_post_husband: Int!, hanbok_post_bride: Int!, meals: String!, meals_price: Int!, meals_num_husband: Int!, meals_num_bride: Int!, present: String!, present_price: Int!, present_num_husband: Int!, present_num_bride: Int!, reserve: String!, reserve_pay: Int!, cost_husband: Int!, cost_bride: Int!, meal_husband: Int!, meal_bride: Int!, present_husband: Int!, present_bride: Int!, reserve_husband: Int!, reserve_bride: Int!): UpdateWeddingResponse!
}

type LoginResponse {
  ok: Boolean!
  error: String
  token: String
}

type MeResponse {
  ok: Boolean!
  error: String
  me: MeType
}

type Query {
  Me: MeResponse!
  ListBills(cursor: ID, user_id: ID, title: String, hall: String): ListBillsResponse!
  ReadBill(id: ID!): ReadBillResponse!
  ViewCart: ViewCartResponse!
  ListCloseds(cursor: ID): ListClosedsResponse!
  ReadClosed(id: ID!): ReadClosedResponse!
  ListItems(cursor: ID, name: String, divide: String, native: String): ListItemsResponse!
  ReadItem(id: ID!): ReadItemResponse!
  ListUsers(username: String, cursor: ID): ListUsersResponse!
  ReadUser(id: ID!): ReadUserResponse!
  ListWeddings(date: String, cursor: ID): ListWeddingsResponse!
  ReadWedding(id: ID!): ReadWeddingResponse!
}

type RegisterResponse {
  ok: Boolean!
  error: String
}

type AddBillResponse {
  ok: Boolean!
  error: String
}

type ListBillsResponse {
  ok: Boolean!
  error: String
  bills: [Bill]
}

type ReadBillResponse {
  ok: Boolean!
  error: String
  bill: Bill
}

type RemoveBillResponse {
  ok: Boolean!
  error: String
}

type RestoreBillResponse {
  ok: Boolean!
  error: String
}

type AddCartResponse {
  ok: Boolean!
  error: String
  cart: Cart
}

type RemoveCartResponse {
  ok: Boolean!
  error: String
}

type RemoveOneResponse {
  ok: Boolean!
  error: String
}

type ViewCartResponse {
  ok: Boolean!
  error: String
  cart: Cart
}

type AddClosedResponse {
  ok: Boolean!
  error: String
}

input InputUser {
  username: String!
  closed_date: [String]
}

type ListClosedsResponse {
  ok: Boolean!
  error: String
  closeds: [Closed]
}

type ReadClosedResponse {
  ok: Boolean!
  error: String
  closed: Closed
  closed_users: [ClosedUser]
}

type RemoveClosedResponse {
  ok: Boolean!
  error: String
}

type AddItemResponse {
  ok: Boolean!
  error: String
}

type ListItemsResponse {
  ok: Boolean!
  error: String
  items: [Item]
}

type ReadItemResponse {
  ok: Boolean!
  error: String
  item: Item
}

type RemoveItemResponse {
  ok: Boolean!
  error: String
}

type UpdateItemResponse {
  ok: Boolean!
  error: String
}

type AddReserveResponse {
  ok: Boolean!
  error: String
}

type RemoveReserveResponse {
  ok: Boolean!
  error: String
}

scalar Date

type Closed {
  id: ID!
  year: String!
  month: String!
  closed_users: [ClosedUser]
  created_at: Date!
}

type ClosedUser {
  id: ID!
  username: String!
  closed_date: [String]
  closedId: ID!
  closed: Closed
  created_at: Date!
}

type User {
  id: ID!
  username: String!
  password: String!
  admin: Boolean!
  created_at: Date!
  updated_at: Date
}

type MeType {
  id: ID!
  username: String!
  admin: Boolean!
}

type InputItem {
  id: ID!
  name: String!
  divide: String!
  native: String!
  unit: String!
  price: Int!
  count: Int!
  amount: Int!
}

type Item {
  id: ID!
  num: Int!
  name: String!
  divide: String!
  native: String!
  unit: String!
  price: Int!
  created_at: Date!
  updated_at: Date
}

type Cart {
  id: ID!
  items: [InputItem]!
  completed: Boolean!
  deleted: Boolean!
  created_at: Date!
  updated_at: Date
  user_id: String!
  bill_id: String
}

type Bill {
  id: ID!
  title: String!
  hall: String!
  etc: String!
  total_amount: Int!
  items: [InputItem]
  reserve: Int
  username: String!
  user_id: String!
  cart_id: String!
  created_at: Date!
}

type Wedding {
  id: ID!
  husband_name: String!
  bride_name: String!
  wedding_at: String!
  event_at: String!
  cost_husband: Int!
  cost_bride: Int!
  meal_husband: Int!
  meal_bride: Int!
  present_husband: Int!
  present_bride: Int!
  reserve_husband: Int!
  reserve_bride: Int!
  created_at: Date!
  updated_at: Date
  conventionId: String
  convention: Convention
  companyId: String
  company: Company
  hanbokId: String
  hanbok: Hanbok
  eventId: String
  event: Event
  mealId: String
  meal: Meal
  presentId: String
  present: Present
  reserveId: String
  reserve: Reserve
}

type Company {
  id: ID!
  company_husband: Int!
  company_bride: Int!
  rooftop_husband: Int!
  rooftop_bride: Int!
  owner_woman_husband: Int!
  owner_woman_bride: Int!
  owner_man_husband: Int!
  owner_man_bride: Int!
  select_husband: Int!
  select_bride: Int!
  frame_husband: Int!
  frame_bride: Int!
  dress_husband: Int!
  dress_bride: Int!
  hairpin_husband: Int!
  hairpin_bride: Int!
  wig_husband: Int!
  wig_bride: Int!
  video_husband: Int!
  video_bride: Int!
  etc_husband: Int!
  etc_bride: Int!
  weddingId: String!
  wedding: Wedding!
}

type Convention {
  id: ID!
  rental_husband: Int!
  rental_bride: Int!
  sword_husband: Int!
  sword_bride: Int!
  glove_husband: Int!
  glove_bride: Int!
  bouquet_husband: Int!
  bouquet_bride: Int!
  ceremony_husband: Int!
  ceremony_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Event {
  id: ID!
  play_husband: Int!
  play_bride: Int!
  anthem_husband: Int!
  anthem_bride: Int!
  moderator_husband: Int!
  moderator_bride: Int!
  officiate_husband: Int!
  officiate_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Hanbok {
  id: ID!
  hanbok_pre_husband: Int!
  hanbok_pre_bride: Int!
  hanbok_post_husband: Int!
  hanbok_post_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Meal {
  id: ID!
  meals: String!
  meals_price: Int!
  meals_num_husband: Int!
  meals_num_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Present {
  id: ID!
  present: String!
  present_price: Int!
  present_num_husband: Int!
  present_num_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Reserve {
  id: ID!
  reserve: String!
  reserve_pay: Int!
  weddingId: String
  wedding: Wedding
}

type InitPasswordResponse {
  ok: Boolean!
  error: String
}

type ListUsersResponse {
  ok: Boolean!
  error: String
  users: [User]
}

type ReadUserResponse {
  ok: Boolean!
  error: String
  user: User
}

type RemoveUserResponse {
  ok: Boolean!
  error: String
}

type SetAdminResponse {
  ok: Boolean!
  error: String
}

type SetEmployeeResponse {
  ok: Boolean!
  error: String
}

type AddWeddingResponse {
  ok: Boolean!
  error: String
}

type ListWeddingsResponse {
  ok: Boolean!
  error: String
  weddings: [Wedding]
}

type ReadWeddingResponse {
  ok: Boolean!
  error: String
  wedding: Wedding
  company: Company
  convention: Convention
  event: Event
  hanbok: Hanbok
  meal: Meal
  present: Present
  reserve: Reserve
}

type RemoveWeddingResponse {
  ok: Boolean!
  error: String
}

type UpdateWeddingResponse {
  ok: Boolean!
  error: String
}
