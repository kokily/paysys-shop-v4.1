scalar Date

type Closed {
  id: ID!
  year: String!
  month: String!
  closed_users: [ClosedUser]
  created_at: Date!
}

type ClosedUser {
  id: ID!
  username: String!
  closed_date: [String]
  closedId: ID!
  closed: Closed
  created_at: Date!
}

type User {
  id: ID!
  username: String!
  password: String!
  admin: Boolean!
  created_at: Date!
  updated_at: Date
}

type MeType {
  id: ID!
  username: String!
  admin: Boolean!
}

type InputItem {
  id: ID!
  name: String!
  divide: String!
  native: String!
  unit: String!
  price: Int!
  count: Int!
  amount: Int!
}

type Item {
  id: ID!
  num: Int!
  name: String!
  divide: String!
  native: String!
  unit: String!
  price: Int!
  created_at: Date!
  updated_at: Date
}

type Cart {
  id: ID!
  items: [InputItem]!
  completed: Boolean!
  deleted: Boolean!
  created_at: Date!
  updated_at: Date
  user_id: String!
  bill_id: String
}

type Bill {
  id: ID!
  title: String!
  hall: String!
  etc: String!
  total_amount: Int!
  items: [InputItem]
  reserve: Int
  username: String!
  user_id: String!
  cart_id: String!
  created_at: Date!
}

type Wedding {
  id: ID!
  husband_name: String!
  bride_name: String!
  wedding_at: String!
  event_at: String!
  created_at: Date!
  updated_at: Date
  conventionId: String
  convention: Convention
  companyId: String
  company: Company
  hanbokId: String
  hanbok: Hanbok
  eventId: String
  event: Event
  mealId: String
  meal: Meal
  presentId: String
  present: Present
  reserveId: String
  reserve: Reserve
}

type Company {
  id: ID!
  company_husband: Int!
  company_bride: Int!
  rooftop_husband: Int!
  rooftop_bride: Int!
  owner_woman_husband: Int!
  owner_woman_bride: Int!
  owner_man_husband: Int!
  owner_man_bride: Int!
  select_husband: Int!
  select_bride: Int!
  frame_husband: Int!
  frame_bride: Int!
  dress_husband: Int!
  dress_bride: Int!
  hairpin_husband: Int!
  hairpin_bride: Int!
  wig_husband: Int!
  wig_bride: Int!
  video_husband: Int!
  video_bride: Int!
  etc_husband: Int!
  etc_bride: Int!
  weddingId: String!
  wedding: Wedding!
}

type Convention {
  id: ID!
  rental_husband: Int!
  rental_bride: Int!
  sword_husband: Int!
  sword_bride: Int!
  glove_husband: Int!
  glove_bride: Int!
  bouquet_husband: Int!
  bouquet_bride: Int!
  ceremony_husband: Int!
  ceremony_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Event {
  id: ID!
  play_husband: Int!
  play_bride: Int!
  anthem_husband: Int!
  anthem_bride: Int!
  moderator_husband: Int!
  moderator_bride: Int!
  officiate_husband: Int!
  officiate_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Hanbok {
  id: ID!
  hanbok_pre_husband: Int!
  hanbok_pre_bride: Int!
  hanbok_post_husband: Int!
  hanbok_post_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Meal {
  id: ID!
  meals: String!
  meals_price: Int!
  meals_num_husband: Int!
  meals_num_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Present {
  id: ID!
  present: String!
  present_price: Int!
  present_num_husband: Int!
  present_num_bride: Int!
  weddingId: String
  wedding: Wedding
}

type Reserve {
  id: ID!
  reserve: String!
  reserve_pay: Int!
  reserve_husband: Int!
  reserve_bride: Int!
  weddingId: String
  wedding: Wedding
}